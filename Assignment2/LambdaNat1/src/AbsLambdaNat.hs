

module AbsLambdaNat where

-- Haskell module generated by the BNF converter




newtype Id = Id String deriving (Eq, Ord, Show, Read)
data Program = Prog Exp
  deriving (Eq, Ord, Show, Read)

data Exp = EAbs Id Exp | EApp Exp Exp | ENat0 | ENatS Exp | EVar Id
  deriving (Eq, Ord, Show, Read)

