
==================== FINAL INTERFACE ====================
2021-10-29 06:10:21.0019723 UTC

interface main:Main 8064
  interface hash: 780e975e7258c13b9245d8dfb7db7828
  ABI hash: c5d7e60e6ac9b1250873b64236eee093
  export-list hash: c57cffe296d2b17ad64c1a31fea7133f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 4f842f682a1d711e4bbe0d472d5fa66a
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: LambdaNat-0.1.0.0 array-0.5.3.0 base-4.12.0.0
                      containers-0.6.0.1 deepseq-1.4.4.0 ghc-prim-0.5.3
                      integer-gmp-1.0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Set.Internal
import  -/  LambdaNat-0.1.0.0:AbsLambdaNat 850e83c55689f178ba33eddcb68f5912
import  -/  LambdaNat-0.1.0.0:ErrM 891511a0d247a63f97006997da116fd7
import  -/  LambdaNat-0.1.0.0:Interpreter 350eb5e2d255067f121961beb9c97022
import  -/  LambdaNat-0.1.0.0:LexLambdaNat 014d392d5cc646ae6c58979a579e9e2f
import  -/  LambdaNat-0.1.0.0:ParLambdaNat d59e722081b1127bcc7d39ac7e032e76
import  -/  LambdaNat-0.1.0.0:PrintLambdaNat ae1572619bfa0bd329cfabb5e79c80bf
import  -/  base-4.12.0.0:Control.Monad 728c9526f38369d3ad3bf7824b06e87e
import  -/  base-4.12.0.0:Data.Foldable 5f70351366640f007be66681d2212df8
import  -/  base-4.12.0.0:Data.OldList e931cf456dc87f11ee6e6fb153bca23e
import  -/  base-4.12.0.0:GHC.Base c00b75f0b052d05c55ba6a4dd1c63b26
import  -/  base-4.12.0.0:GHC.IO 898d4ddbf00eb4732e5f462760aa42ae
import  -/  base-4.12.0.0:GHC.Show 838a5d039379d82d9626aae53dfce276
import  -/  base-4.12.0.0:Prelude 3c779dfd6448bdd8e234c336802c2acb
import  -/  base-4.12.0.0:System.Environment c54e0d0308e729fdace6bc37aa74bb52
import  -/  base-4.12.0.0:System.Exit 515b274dfd11f1bb927c19c072587cec
import  -/  base-4.12.0.0:System.IO dd4f3cfe73b94b7cae46a4ca98a3f09f
import  -/  ghc-prim-0.5.3:GHC.Classes 0f6fd7d7db53fc48f6e1f01803cc6c9d
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
78b10955165b1203fe7a19f6681ef33b
  type ParseFun a = [LexLambdaNat.Token] -> ErrM.Err a
4accfb08b3f50eab5f429c59d8e6b699
  type Verbosity = GHC.Types.Int
8627430959e5b80d7089d656c1b10f43
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
cbe1c9a62e2360111cb5339404037fdf
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case GHC.IO.Handle.Text.hGetContents1
                             GHC.IO.Handle.FD.stdin
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Main.main8 Main.main7 ParLambdaNat.pProgram ipv3 ipv2 }
                   : ds ds2
                   -> let {
                        fail :: GHC.Prim.Void#
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          <join 1> {- Arity: 1, Strictness: <L,A> -}
                        = \ (ds3 :: GHC.Prim.Void#)[OneShot] ->
                          case GHC.Base.eqString
                                 ds
                                 (GHC.CString.unpackCString# Main.main6) of wild1 {
                            GHC.Types.False -> Main.main5 wild ipv
                            GHC.Types.True -> Main.main4 ds2 ipv }
                      } in
                      case GHC.Base.eqString
                             ds
                             (GHC.CString.unpackCString# Main.main3) of wild1 {
                        GHC.Types.False -> fail GHC.Prim.void#
                        GHC.Types.True
                        -> case ds2 of wild2 {
                             [] -> Main.main2 ipv : ipv2 ipv3 -> fail GHC.Prim.void# } } } }) -}
27fec5d9145264a72808e8b895e78f0e
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
c9f0255180863b63ad4dc3785e4b6b7c
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("--help"#) -}
45f5f6f4bcf9bf02cf1f94dd1b237bf5
  main4 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
c26642c73b5b0bf03b027ef0fff76b15
  main5 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
80f213d8e526ba696c8fa332be92868a
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-s"#) -}
15afd4a775bf0f6176a60da88b7d7f05
  main7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
1ac64ac023d2002936a4234494a8aa65
  main8 ::
    Main.Verbosity
    -> Main.ParseFun AbsLambdaNat.Program
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><C(S),1*C1(U)><L,U><S,U> -}
88ab9deadff6d985cc912aed8cb7ed34
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

